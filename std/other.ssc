struct Raw(value: Raw) {

}

fun draw(
    id: Number,
    x1: Number,
    y1: Number,
    x2: Number,
    y2: Number,
    x3: Number,
    y3: Number,
    x4: Number,
    y4: Number,
    z: Number,
    alpha: Number
) {
    Draw(id, x1, y1, x2, y2, x3, y3, x4, y4, z, alpha)
}

fun judge(
    src: Number,
    dst: Number,
    min1: Number,
    max1: Number,
    min2: Number,
    max2: Number,
    min3: Number,
    max3: Number
) {
    Number(Judge(src, dst, min1, max1, min2, max2, min3, max3))
}

fun judge(
    src: Number,
    dst: Number,
    max1: Number,
    max2: Number,
    max3: Number
) {
    Number(JudgeSimple(src, dst, max1, max2, max3))
}

fun getNumberOption(index: Number) {
    Number(Get(2, index.value))
}

fun getBooleanOption(index: Number) {
    Boolean(Get(2, index.value))
}

fun getNumber(id: Number, index: Number) {
    Number(Get(id.value, index.value))
}

fun getBoolean(id: Number, index: Number) {
    Boolean(Get(id.value, index.value))
}

fun set(id: Number, index: Number, value: Number) {
    Set(id.value, index.value, value.value)
}

fun set(id: Number, index: Number, value: Boolean) {
    Set(id.value, index.value, value.value)
}

fun play(id: Number, time: Number) {
    Play(id.value, time.value)
}

val now get() { getNumber(1, 0) }
val deltaTime get() { getNumber(1, 1) }
val aspectRatio get() { getNumber(1, 2) }
val audioOffset get() { getNumber(1, 3) }
val inputOffset get() { getNumber(1, 4) }

struct Rectangle(
    centerX: Number,
    centerY: Number,
    width: Number,
    height: Number
) {
    inline val x1 = centerX - width / 2
    inline val y1 = centerY - height / 2
    inline val x2 = centerX - width / 2
    inline val y2 = centerY + height / 2
    inline val x3 = centerX + width / 2
    inline val y3 = centerY + height / 2
    inline val x4 = centerX + width / 2
    inline val y4 = centerY - height / 2

    fun drawSprite(id: Number, z: Number, alpha: Number) {
        draw(
            id, x1, y1, x2, y2, x3, y3, x4, y4, z, alpha
        )
    }
}

struct Point(x: Number, y: Number) {
    operator fun distanceTo(other: Point) {
        ((x - other.x)**2 + (y - other.y)**2)**0.5
    }
}

fun Rectangle(
    center: Point,
    width: Number,
    height: Number
) {
    Rectangle(center.x, center.y, width, height)
}